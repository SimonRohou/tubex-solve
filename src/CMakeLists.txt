# ==================================================================
#  tubex-solve - cmake configuration file
# ==================================================================

# source files of libtubex-solve
list (APPEND SRC ${CMAKE_CURRENT_SOURCE_DIR}/tubex_Solver.cpp
                 ${CMAKE_CURRENT_SOURCE_DIR}/tubex_Solver.h
                 )

# Create the target for libtubex-solve
add_library (tubex-solve ${SRC})

target_compile_options (tubex-solve PUBLIC ${TUBEX_CFLAGS})
target_include_directories (tubex-solve PUBLIC ${TUBEX_INCLUDE_DIRS})
target_include_directories (tubex-solve PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_include_directories (tubex-solve PUBLIC ${CMAKE_CURRENT_BINARY_DIR})
target_link_libraries (tubex-solve PUBLIC ${TUBEX_LDFLAGS})

# Generates a tubex-solve.h file

foreach (srcfile ${SRC})
  if (srcfile MATCHES "\\.h$" OR srcfile MATCHES "\\.hpp$")
    list (APPEND HDR ${srcfile})
  endif ()
endforeach()

set(TUBEX_SOLVE_MAIN_HEADER ${CMAKE_CURRENT_BINARY_DIR}/tubex-solve.h)
file(WRITE ${TUBEX_SOLVE_MAIN_HEADER} "/* This file is generated by CMake */\n\n")
file(APPEND ${TUBEX_SOLVE_MAIN_HEADER} "#ifndef __TUBEX_SOLVE_H__\n#define __TUBEX_SOLVE_H__\n\n")
foreach(header_path ${HDR})
  get_filename_component(header_name ${header_path} NAME)
  file(APPEND ${TUBEX_SOLVE_MAIN_HEADER} "#include \"${header_name}\"\n")
endforeach()
file(APPEND ${TUBEX_SOLVE_MAIN_HEADER} "\n#endif /* __TUBEX_SOLVE_H__ */\n")

# installation of libtubex-solve files
install (TARGETS tubex-solve DESTINATION ${CMAKE_INSTALL_LIBDIR})
install (FILES ${HDR} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tubex-solve)
install (FILES ${TUBEX_SOLVE_MAIN_HEADER} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/tubex-solve)